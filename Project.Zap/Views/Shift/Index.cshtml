@{
    @using Microsoft.AspNetCore.Authorization
    @using Microsoft.AspNetCore.Mvc.Localization

    @inject IViewLocalizer Localizer
    @inject IAuthorizationService AuthorizationService
}


@model Project.Zap.Models.SearchShiftViewModel

<h1>@Localizer["Title"]</h1>

@if (ViewData.ContainsKey("ValidationError"))
{
    <div class="alert alert-danger">
        <strong>@Localizer["ErrorTitle"]</strong> @ViewData["ValidationError"]
    </div>
}

@if (ViewData.ContainsKey("SuccessMessage"))
{
    <div class="alert alert-success">
        <strong>@Localizer["SuccessTitle"]</strong> @ViewData["SuccessMessage"]
    </div>
}

<partial name="Search" model="new Project.Zap.Models.SearchShiftViewModel { LocationNames = Model.LocationNames, NewShift = new Project.Zap.Models.ShiftViewModel() }" />

<h3>@Localizer["ResultsTitle"]</h3>
@if(Model.Result != null)
{
<div class="container">
    <div class="row">
        <div class="d-none d-xs-block d-sm-block col-md-4 font-weight-bold">@Localizer["TableStore"]</div>
        <div class="d-none d-xs-block d-sm-block col-md-4 font-weight-bold">@Localizer["TableStart"] - @Localizer["TableEnd"]</div>
        <div class="d-none d-xs-block d-sm-block col-md-2 font-weight-bold">@Localizer["TableWorkType"]</div>
        <div class="d-none d-xs-block d-sm-block col-md-1 font-weight-bold">@Localizer["TableAvailable"]</div>
        @if ((await AuthorizationService.AuthorizeAsync(User, "OrgAManager")).Succeeded)
        {
        <div class="d-none d-xs-block d-sm-block col-md-1 font-weight-bold">@Localizer["TableView"]</div>
        }
        @if ((await AuthorizationService.AuthorizeAsync(User, "OrgBEmployee")).Succeeded)
        {
        <div class="d-none d-xs-block d-sm-block col-md-1 font-weight-bold">@Localizer["TableBook"]</div>
        }
    </div>
    @foreach (var shift in Model.Result)
    {
    <div class="row">
        <div class="d-block d-xs-none d-sm-none col-xs-6 col-sm-6 font-weight-bold">@Localizer["TableStore"]</div>
        <div class="col-xs-6 col-sm-6 col-md-4">@shift.LocationName</div>

        <div class="d-block d-xs-none d-sm-none col-xs-6 col-sm-6 font-weight-bold">@Localizer["TableStart"]</div>
        <div class="col-xs-6 col-sm-6 col-md-4">@shift.Start.ToString("yyyy-MM-ddTHH:MM") - @shift.End.ToString("yyyy-MM-ddTHH:MM")</div>

        <div class="d-block d-xs-none d-sm-none col-xs-6 col-sm-6 font-weight-bold">@Localizer["TableWorkType"]</div>
        <div class="col-xs-6 col-sm-6 col-md-2">@shift.WorkType</div>

        <div class="d-block d-xs-none d-sm-none col-xs-6 col-sm-6 font-weight-bold">@Localizer["TableAvailable"]</div>
        <div class="col-xs-6 col-sm-6 col-md-1">@shift.Available / @shift.Quantity</div>
        @if ((await AuthorizationService.AuthorizeAsync(User, "OrgAManager")).Succeeded)
    {
        <a class="btn btn-primary col-xs-6 col-sm-6 col-md-1" asp-controller="Shift" asp-action="ViewShift" asp-route-StoreName="@shift.LocationName" asp-route-Start="@shift.Start.ToString("yyyy-MM-ddTHH:mm")" asp-route-End="@shift.End.ToString("yyyy-MM-ddTHH:mm")" asp-route-WorkType="@shift.WorkType" asp-route-Quantity="@shift.Quantity" asp-route-Available="@shift.Available">@Localizer["LinkView"]</a>
    }
        @if ((await AuthorizationService.AuthorizeAsync(User, "OrgBEmployee")).Succeeded)
    {
        <a class="btn btn-primary col-xs-6 col-sm-6 col-md-1" asp-controller="Shift" asp-action="Book" asp-route-StoreName="@shift.LocationName" asp-route-Start="@shift.Start.ToString("yyyy-MM-ddTHH:mm")" asp-route-End="@shift.End.ToString("yyyy-MM-ddTHH:mm")" asp-route-WorkType="@shift.WorkType">@Localizer["LinkBook"]</a>
    }
    </div>
    }
</div>
}

